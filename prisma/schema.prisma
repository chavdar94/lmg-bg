// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id       String    @id @default(uuid())
    email    String    @unique
    password String
    isAdmin  Boolean   @default(false)
    session  Session[]
}

model Session {
    id        String   @id @default(uuid())
    userId    String
    expiresAt DateTime

    user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Products {
    id                String   @id @default(uuid())
    name              String?
    product_status    String?
    haspromo          Int?
    price             Float?
    price_with_vat    Float?
    price_without_vat Float?
    currency          String?
    main_picture_url  String?
    manufacturer      String?
    category          String?
    subcategory       String?
    partnum           String?
    vendor_url        String?
    properties        Json?
    created_at        DateTime @default(now())
    slug              String
}

model Category {
    id          String @id @default(uuid())
    title       String
    description String
    slug        String @unique
    price       Int

    @@map("categories")
}

model ServiceCategory {
    id      String    @id @default(uuid())
    title   String
    Service Service[]

    @@map("service_categories")
}

model Service {
    id         String          @id @default(uuid())
    title      String
    price      Float
    category   ServiceCategory @relation(fields: [categoryId], references: [id])
    categoryId String
    isDeleted  Boolean         @default(false)

    @@map("services")
}

model Post {
    id        String   @id @default(uuid())
    title     String
    content   String
    mainImage Bytes
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    author    String?
    Image     Image[]
}

model Image {
    id      String @id @default(uuid())
    content Bytes
    post    Post   @relation(fields: [postId], references: [id])
    postId  String
}

model UsedProduct {
    id               String   @id @default(uuid())
    name             String?
    product_status   String?
    price_with_vat   Float?
    main_picture_url Bytes?
    manufacturer     String?
    category         String?
    subcategory      String?
    vendor_url       String?
    properties       String?
    created_at       DateTime @default(now())
    slug             String
}
